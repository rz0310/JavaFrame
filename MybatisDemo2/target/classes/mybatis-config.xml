<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTDConfig 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--1.加载属性文件-->
    <!--注意：mybatis将按照下面的顺序来加载属性
    (1)在properties元素体内定义的属性首先被读取。
    (2)然后会读取properties元素中resource或者url加载的属性，它会覆盖已加载的同名属性。
    (3)最后读取parameterType传递的属性，它会覆盖已读取的同名属性。
    -->
    <properties resource="jdbc.properties">
        <!--properties中还可以定义一些属性值和属性名，但是建议不要再properties元素体内添加任何属性值，
        只将属性值定义在properties文件中，在properties文件中定义的属性值要有一定的特殊性，例如：xxx.xxx
        -->
        <!--<property name="" value=""-->
    </properties>
    <!--2.settings全局参数配置
        比如：开启二级缓存，开启延迟加载-->
    <!--<settings>-->
        <!--<setting name="" value=""/>-->
    <!--</settings>-->
    <!--3.自定义别名-->
    <typeAliases>
        <!--定义单个别名:
        type：类型的路径
        alias别名-->
        <!--<typeAlias type="com.renjing.mybatis.po.User" alias="user"></typeAlias>-->
        <!--批量定义别名
        mybatis自动扫描po包，自动定义别名，别名就是类名(首字母大写小写都可以)-->
        <package name="com.renjing.mybatis.po"></package>
    </typeAliases>
    <!--4.类型处理器：mybatis通过类型处理器满足日常需要，不需要自定义-->
    <!--5.ObjectFactory：对象工厂-->
    <!--6.plugins：插件-->
    <!--7.environments：环境集合属性对象
            environment：环境子属性对象
                transactionManager：事务管理
                dataSource：数据源-->
    <!--8.mappers(映射配置)-->
    <!--和Spring整合后，environments配置将被废除-->
    <environments default="development">
        <environment id="development">
            <!--使用jdbc事务管理，事务控制由mybatis-->
            <transactionManager type="JDBC"/>
            <!--数据库连接池，由mybatis管理-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--加载映射文件-->
    <mappers>
        <!--(1)通过resource方法一次加载一个配置文件-->
        <!--<mapper resource="com.renjing.mybatis.mapper/OrdersUserMapper.xml"></mapper>-->
        <!--(2)通过mapper接口加载单个映射文件(使用的是mapper代理方法)
        规范：需要将mapper接口的类名和mapper.xml配置文件的名称保持一致，且在一个目录中-->
        <!--<mapper class="com.renjing.mybatis.mapper.UserMapper"></mapper>-->
        <!--(3)批量加载mapper
        指定mapper接口的包名，mybatis自动扫描包下所有mapper接口进行加载
        规范：需要将mapper接口的类名和mapper.xml配置文件的名称保持一致，且在一个目录中-->
        <!--<package name="com.renjing.mybatis.mapper"></package>-->
        <mapper class="com.renjing.mybatis.mapper.OrdersUserMapper"></mapper>
    </mappers>
</configuration>