<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dao.IUserDao">
    <!--配置实体类属性与数据库列名的对应关系-->
    <resultMap id="userMap" type="com.mybatis.domain.User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
    <!--select中的resultMap="userMap"属性-->
    <!--查询所有-->
    <select id="findAll"  resultType="user">
        <!--方式一：起别名的方式解决实体类属性与数据库列名不一致的问题-->
        <!--select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday from user-->
        select * from user<!--定义实体类属性与数据库列名的对应关系-->
    </select>
    <!--插入用户-->
    <insert id="insertUser" parameterType="com.mybatis.domain.User">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) value(#{username},#{address},#{sex},#{birthday})
    </insert>
    <!--更新用户-->
    <update id="updateUser" parameterType="com.mybatis.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>
    <!--删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{uid}
    </delete>
    <!--按照id查询一个-->
    <select id="findUserById" parameterType="Integer" resultType="com.mybatis.domain.User">
        select * from user where id=#{uid}
    </select>
    <!--按照名称查询-->
    <select id="findUserByName" parameterType="String" resultType="com.mybatis.domain.User">
        <!--select * from user where username like #{username}-->
        select * from user where username like '%${value}%'
    </select>
    <!--获取用户的总记录条数-->
    <select id="findTotal" resultType="Integer">
        select count(*) from user
    </select>
    <!--根据pojo包装对象查询-->
    <select id="findUserByNameQueryVo" parameterType="com.mybatis.domain.UserQueryVo" resultType="com.mybatis.domain.User">
        select * from user where username like '${user.username}'
    </select>
</mapper>